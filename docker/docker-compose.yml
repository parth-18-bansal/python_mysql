services:
  flask_app:
    build:
      context: ../
      dockerfile: docker/app/Dockerfile
    # here we don't have to create the network seperately. docker-compose will create the network for us.
    networks:
      - app_network
    # local:container. it is bind mount and docker automaically bind the root app folder to /app folder in container.
    # so any changes if make in the app folder will be reflected in the container. so we don't need to rebuild the image.
    volumes:
      - ../app:/app 
    environment:
        DB_HOST: db 
        DB_USER: user 
        DB_PASSWORD: password
        DB_NAME: mydb
    depends_on:
      - db
    ports:
      - "5000:5000"
      - "8000:8000"

  db:
    image: mysql:5.7
    networks:
      - app_network
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: mydb
        MYSQL_USER: user
        MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

  nginx:
    image: nginx:latest
    networks:
      - app_network
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "800:800"
    depends_on:
      - flask_app

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - app_network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  

networks:
  app_network:

volumes:
  db_data:

